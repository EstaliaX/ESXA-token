

  EXAToken Basic Tests
    ERC20 Basic Properties Tests
      ✔ Token name should be 'EstateX Protocol' (462ms)
      ✔ Token symbol should be 'EXA'
      ✔ Token decimals should be 18
      ✔ Initial total supply should be 1 billion * 10^18
      ✔ Initial supply should be allocated to the deployer (owner)
    Transfer Function Tests
      ✔ transfer() - Should be able to transfer tokens between accounts
      ✔ transfer() - Should emit Transfer event when transferring tokens
      ✔ transferFrom() - Should emit Transfer event when transferring tokens
      ✔ approve() - Should emit Approval event when approving
      ✔ transfer() - Should fail when insufficient balance
      ✔ transferFrom() - Should allow another account to transfer on behalf after approval
      ✔ increaseAllowance() - Should verify allowance increase functionality
      ✔ decreaseAllowance() - Should verify allowance decrease functionality
    Lockup Functionality Tests
      ✔ lock() - Should deduct tokens from balance and properly set lockup state
      ✔ lock() - Should prevent transferring locked tokens before release time
      ✔ autoUnlock() - Should automatically unlock tokens when the release time has passed
      ✔ distributeWithLockup() - Should distribute and lock tokens in a single transaction
      ✔ unlock() - Should allow admin to manually unlock token lockups

  EXAToken Unlock Functionality Tests
    Basic Unlock Functionality Tests
      ✔ unlock() - Should properly unlock tokens from a locked account
      ✔ unlock() - Available balance should increase after unlock
    Unlock Permission and Exception Tests
      ✔ unlock() - Only owner should be able to unlock
      ✔ unlock() - Should fail when attempting to unlock an account that is not locked
      ✔ unlock() - Should fail when attempting to unlock with an invalid index
    Complex Unlock Scenario Tests
      ✔ unlock() - Should unlock only the specific index when multiple lockups exist
      ✔ unlock() - The locks state should change to false when the last lockup is unlocked
      ✔ unlock() - Should verify transfer capability after unlock
    Edge Case and Special Scenario Tests
      ✔ unlock() - Locks state should be correctly updated when unlocking the last lockup from a non-zero index
      ✔ unlock() - Multiple accounts' lockups and unlocks should work independently
      ✔ unlock() - Should be able to lock again after being completely unlocked

  
  EXAToken Burn Functionality Tests
    ✔ burn() - Owner should be able to burn their own tokens
    ✔ burn() - Owner should not be able to burn more tokens than their balance
    ✔ burn() - Non-owner accounts should not be able to burn tokens
    ✔ burn() - Total supply should decrease exactly by the burned amount

  EXAToken ClaimToken Functionality Tests
    ✔ Should be able to transfer other tokens held by the contract to a specified address
    ✔ Only owner should be able to call the claimToken function
    ✔ Should fail when attempting to transfer more tokens than the contract holds
    ✔ Should be able to transfer 0 tokens
    ✔ Should handle transfers to the zero address (0x0) appropriately
    ✔ Should fail when attempting to transfer tokens not owned by the contract
    Tests for Claiming EXA Tokens Themselves
      ✔ Should be able to transfer EXA tokens held by the contract to a specified address
      ✔ Should be able to claim EXA tokens to multiple addresses
      ✔ Should fail when attempting to transfer more EXA tokens than the contract holds
      ✔ EXA token treasury vault role: Should work correctly after multiple transfer stages

  EXAToken Ownership Transfer Tests
    Basic Ownership Tests
      ✔ Contract deployer should be set as initial owner
      ✔ Only owner should be able to call transferOwnership
    Ownership Transfer Functionality Tests
      ✔ New address should be set as owner after transferOwnership
      ✔ Previous owner should have no permissions after ownership transfer
      ✔ Should not be able to transfer ownership to the zero address (0x0)
    Ownership and Permission Restriction Tests
      ✔ Only owner should be able to use the token burn function
      ✔ Only owner should be able to use the token lockup function
    Ownership Transfer Scenario Tests
      ✔ Final owner should be correctly set after multiple ownership transfers
      ✔ Only the new owner should be able to use important management functions after ownership transfer

  EXAToken Pause/Unpause Functionality Tests
    Basic Pause/Unpause Permission Tests
      ✔ Only owner should be able to call the pause() function
      ✔ Only owner should be able to call the unpause() function
    Pause Functionality Tests
      ✔ Contract state should be paused after calling pause()
      ✔ transfer function should fail after calling pause()
      ✔ transferFrom function should fail after calling pause()
      ✔ approve function should fail after calling pause()
    Unpause Functionality Tests
      ✔ Contract state should return to normal after calling unpause()
      ✔ transfer function should work again after calling unpause()
      ✔ transferFrom function should work again after calling unpause()
      ✔ approve function should work again after calling unpause()
    Pause/Unpause Complex Scenario Tests
      ✔ Functions should work properly after multiple pause/unpause cycles
      ✔ Other critical administrative functions should continue to work while paused

  EXAToken Balance and Supply Tests
    Total Supply Tests
      ✔ Token total supply should be accurate after contract deployment
      ✔ Total supply should decrease after burning tokens
      ✔ Total supply should not change due to transfers
    Wallet Balance (balanceOf) Tests
      ✔ Initial balance of owner should be equal to total supply
      ✔ Balance of recipient address should be correctly reflected after transfer
      ✔ Balance of sender address should be correctly deducted after transfer
      ✔ Sum of all address balances should match total supply after multiple transfers
    Lockup and Balance Correlation Tests
      ✔ Balance should correctly show the total amount including locked tokens
      ✔ Balance should be correctly displayed after unlocking tokens (1505ms)

  EXAToken Lockup Information Query Tests
    Basic Lockup Information Query Tests
      ✔ Accounts without lockup should have empty lockup information
      ✔ Should display accurate information when querying after a single lockup
    Multiple Lockup Information Query Tests
      ✔ Should correctly query each lockup condition after setting multiple lockups
      ✔ Remaining lockups should be correctly queried after unlocking a specific lockup
    Special Case Lockup Information Query Tests
      ✔ Accurate information should be displayed when release rate is 100%
      ✔ Lockup state should change to false after all lockups are released
      ✔ Lockups for multiple accounts should be correctly queried for each account



  

